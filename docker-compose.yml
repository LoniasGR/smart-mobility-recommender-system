services:
  neo4j:
    image: neo4j:5
    container_name: neo4j
    environment:
      TZ: Europe/Athens
      NEO4J_AUTH: "neo4j/${NEO4J_PASSWORD}"
      NEO4J_PLUGINS: '["graph-data-science"]'
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j:/data/:rw
    restart: always
  app:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: smart-mobility-app
    restart: always
    ports:
      - "8000:8000"
    environment:
      - SERVER_PORT=8000
      - SPRING_NEO4J_URI=bolt://neo4j:7687
      - SPRING_NEO4J_AUTHENTICATION_PASSWORD=${NEO4J_PASSWORD}
      - OPENROUTESERVICE_HOST=http://openrouteservice:8082/ors
  openrouteservice:
    container_name: openrouteservice
    restart: always
    image: openrouteservice/openrouteservice:latest
    ports:
      - "8082:8082"
      - "9005:9001"
    volumes:
      - ./ors-docker:/home/ors
    environment:
      TZ: Europe/Athens
      REBUILD_GRAPHS: False # Set to True to rebuild graphs on container start.
      CONTAINER_LOG_LEVEL: INFO # Log level for the container. Possible values: DEBUG, INFO, WARNING, ERROR, CRITICAL
      # ------------------ JAVA OPTS ------------------ #
      # Configure the memory settings for JAVA or pass additional opts
      # Fore more available ENV properties see Prepare CATALINA_OPTS and JAVA_OPTS
      # in https://github.com/GIScience/openrouteservice/blob/main/docker-entrypoint.sh
      XMS: 1g # start RAM assigned to java
      XMX: 5g # max RAM assigned to java. Rule of Thumb: <PBF-size> * <profiles> * 2
      # Example: 1.5 GB pbf size, two profiles (car and foot-walking)
      # -> 1.5 * 2 * 2 = 6. Set xmx to be AT LEAST `-Xmx6g`
      ADDITIONAL_JAVA_OPTS: "" # further options you want to pass to the java command

      # ----------------- Properties configuration ------------------- #
      # Configure your whole container with only property ENVs.
      # These can be set alternatively or additionally to the yml configuration file.
      # Note, that any values set will override the corresponding values from the yml configuration file.
      # See the ors-config.env file for more options.
      # To have a configuration file-less container, uncomment at least the following properties.
      # The values are examples and provide the default configuration.
      ors.engine.profile_default.build.source_file: /home/ors/files/turkey-latest.osm.pbf
      ors.engine.profiles.driving-car.enabled: true
      ors.engine.profiles.cycling-electric.enabled: true
      ors.engine.profiles.foot-walking.enabled: true
    # ----------------- ENV file configuration ------------------- #
    # Too many variables for your 'environment:' section?
    # Use an env_file with the ENV properties instead and define everything in there:
    # Values will be overwritten if set in the 'environment' section.
    #env_file: ors-config.env

    # ----------------- Healthcheck configuration ------------------- #
    # The healthcheck is disabled by default. Uncomment the following lines to enable it.
    # The healthcheck allows you to monitor the status of the ORS application.
    # Be careful with long graph builds, as the healthcheck will fail and show 'unhealthy' during this time.
    # This is especially useful if you run your ORS container in a production environment.
    #healthcheck:
    #  test: wget --no-verbose --tries=1 --spider http://localhost:8082/ors/v2/health || exit 1
    #  start_period: 1m
    #  interval: 10s
    #  timeout: 2s
    #  retries: 3
    #  disable: false

volumes:
  neo4j:
